inline mat4 orthogonal(float l, float r, float b, float t, float n, float f){
	return{
         2/(r-l),   0.0,     0.0,    ((r+l)/(r-l))*(-1),
           0.0,   2/(t-b),   0.0,    ((t+b)/(t-b))*(-1),
           0.0,     0.0,   2/(n-f),  ((n+f)/(n-f))*(-1),
           0.0,     0.0,     0.0,            1
    };
}

inline mat4 frustum(float l, float r, float b, float t, float n, float f){
	 return{
         -2*n/(r-l),   0.0,      (r+l)/(r-l),      0.0  ,
           0.0,     -2*n/(t-b),  (t+b)/(t-b),      0.0  ,
           0.0,        0.0,      (f+n)/(f-n),  2*n*f/(n-f),
           0.0,        0.0,          -1,           0.0
    };
}

inline mat4 perspective(float fovy, float aspect, float Near, float Far){
	double theta = fovy*M_PI/180.0;
    float t = fabs(Near) * tan((theta)/2);
    float r = t*aspect;
    float b = -t;
    float l = -r;

    return frustum(l,r,b,t,-Near,-Far);
}